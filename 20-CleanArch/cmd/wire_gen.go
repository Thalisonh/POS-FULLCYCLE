// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/thalisonh/20-CleanArch/internal/entity"
	"github.com/thalisonh/20-CleanArch/internal/infra/database"
	"github.com/thalisonh/20-CleanArch/internal/infra/web"
	"github.com/thalisonh/20-CleanArch/internal/usecase"
	"gorm.io/gorm"
)

import (
	_ "github.com/golang-migrate/migrate/v4/source/file"
)

// Injectors from wire.go:

func NewCreateOrderUseCase(db *gorm.DB) *usecase.CreateOrderUseCase {
	orderRepository := database.NewOrderRepository(db)
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepository)
	return createOrderUseCase
}

func NewListOrderUseCase(db *gorm.DB) *usecase.ListOrderUseCase {
	orderRepository := database.NewOrderRepository(db)
	listOrderUseCase := usecase.NewListOrderUseCase(orderRepository)
	return listOrderUseCase
}

func NewWebOrderHandler(db *gorm.DB) *web.WebOrderHandler {
	orderRepository := database.NewOrderRepository(db)
	webOrderHandler := web.NewWebOrderHandler(orderRepository)
	return webOrderHandler
}

// wire.go:

var setOrderRepositoryDependency = wire.NewSet(database.NewOrderRepository, wire.Bind(new(entity.OrderRepositoryInterface), new(*database.OrderRepository)))
